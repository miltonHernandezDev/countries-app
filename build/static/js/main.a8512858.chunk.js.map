{"version":3,"sources":["config/URLS.js","selectors/getCountriesByName.js","selectors/getCountriesByRegion.js","components/loading/Loading.js","hooks/useContext.js","components/ui/Navbar.js","components/countries/CountryCard.js","components/countries/index.js","hooks/useFetch.js","selectors/getCountryById.js","components/country/Maps.js","components/country/Country.js","routes/Countries.Routes.js","Countries-App.js","index.js"],"names":["URLS","getCountriesBysearch","data","search","filter","c","name","toLowerCase","includes","trim","capital","languages","nativeName","callingCodes","getCountryByRegion","region","Loading","className","BgContext","createContext","options","value","Nav","React","memo","setDarkMode","darkMode","onClick","icon","faSun","faMoon","Navbar","setRegion","setSearch","history","useHistory","valueSelect","localStorage","getItem","bgDark","useContext","location","useLocation","queryString","parse","q","length","removeItem","htmlFor","faSearch","defaultValue","onKeyUp","e","preventDefault","target","push","setItem","autoComplete","placeholder","onChange","map","faSortDown","CountryCard","flag","currencies","loading","src","alt","code","to","faEye","Countries","useState","getSearch","useEffect","valueSearch","isMounted","useRef","error","state","setstate","current","fetch","then","res","json","catch","message","useFetch","country","getCountryById","id","setCountry","a","api","countryInfo","info","Error","console","log","MapComponent","lat","lng","defaultZoom","defaultCenter","position","withScriptjs","withGoogleMap","Country","useParams","setcountry","showModal","setShowModal","lastpath","replace","backHome","faLongArrowAltLeft","undefined","Card","onClickCapture","m","style","display","faSpinner","spin","googleMapURL","containerElement","height","mapElement","loadingElement","latlng","population","alpha3Code","borders","subregion","borde","CountriesRoutes","document","body","classList","add","remove","Provider","exact","path","component","CountriesApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a8512858.chunk.js","sourcesContent":["export const URLS = {\n    rest:'https://restcountries.eu/rest/v2',\n    urlMap:'https://maps.googleapis.com/maps/api/js?v3.exp&key=AIzaSyCU1sg0H8sWuzA4IvM1NsO-erYuvsrELTM'\n}","export const getCountriesBysearch= (data, search)=>{\n    if(search==='') return data;\n    else return data.filter(c  => c.name.toLowerCase().includes(search.toLowerCase().trim()) ||  c.capital.toLowerCase().includes(search.toLowerCase().trim()) ||  c.languages[0].nativeName.toLowerCase().includes(search.toLowerCase().trim()) || c.callingCodes[0].toLowerCase().includes(search.toLowerCase().trim()));\n}","\n\nexport const getCountryByRegion = (data, region)=>{\n    if(region==='') return data;\n    else return data.filter(c  => c.region === region );\n}","import React from 'react';\nimport './index.scss';\nconst Loading = () => {\n    return (\n        <div className=\"card-lading\">\n            <div className=\"card-loading-animate\">\n                <div className=\"card-loading-animate1\"></div>\n                <div className=\"card-loading-animate2\">\n                <div className=\"content-1\"></div>\n                    <div className=\"content-2\">\n                        <div className=\"sub-content\"></div>\n                        <div className=\"sub-content\"></div>\n                        <div className=\"sub-content\"></div>\n                        <div className=\"sub-content\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Loading;\n","import { createContext } from \"react\";\n\nexport const BgContext = createContext();","\nimport React, { useContext } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMoon, faSearch, faSortDown, faSun } from '@fortawesome/free-solid-svg-icons';\nimport './index.scss';\nimport { BgContext } from '../../hooks/useContext';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\n\nconst options = [\n    {\n      value: '',\n      name:'Select by region'\n    },\n    {\n      value: 'Americas',\n      name: 'Americas'\n    },\n    {\n      value: 'Asia',\n      name: 'Asia'\n    },\n    {\n      value: 'Africa',\n      name: 'Africa'\n    },\n    {\n      value: 'Polar',\n      name: 'Polar'\n    },\n    {\n      value: 'Oceania',\n      name: 'Oceania'\n    },\n    {\n      value: 'Europe',\n      name: 'Europe'\n    }\n  ]\n  \n\n\n\nconst Nav = React.memo(({setDarkMode, darkMode}) => {\n    const handleDarMode = ()=>{\n      setDarkMode(!darkMode)\n    }\n\n \n\n    return (\n      <>\n       <div className={`nav ${darkMode ? 'dark-nav': 'light-nav'}`}>\n              <h1> Where in the world? </h1>\n            \n              \n                <button className={`${darkMode ? 'border-gray-300 hover:border-gray-600 ': 'border-gray-800  hover:border-gray-300'}`}  onClick={handleDarMode}>\n                   {\n                     darkMode ? \n                      (<> <FontAwesomeIcon icon={faSun}/> Light mode</> )\n                      \n                      :\n                      (<><FontAwesomeIcon icon={faMoon}/> Dark mode</>)\n                   }\n                </button>\n           </div>\n        </>\n    )\n})\n\nexport default Nav;\n\n\n\nexport const Navbar = React.memo( ({setRegion, setSearch})=>{\n  const history = useHistory();\n  let valueSelect = localStorage.getItem('region') || '';\n  const handleChange = e =>{\n    valueSelect = e.target.value\n    localStorage.setItem('region', valueSelect)\n    setRegion(valueSelect);\n  }\n  const {bgDark} = useContext(BgContext);\n\n  const location = useLocation();\n\n  const { q = '' } = queryString.parse(location.search)\n  const  handleInput   = e =>{\n    e.preventDefault();\n    const search = e.target.value;\n    history.push(`?q=${search}`);\n    \n    localStorage.setItem('search', search)\n    if(search.length === 0) return;\n    setSearch(search)\n    \n  } \n\n  if(q.length < 1)localStorage.removeItem('search');\n  \n\n  return (\n\n          <div className=\"navbar\">\n                \n          <div className=\"nav-inputs\">\n\n              <div className=\"form-group\">\n                  <label htmlFor=\"searchCountry\" >\n                          <FontAwesomeIcon icon={faSearch}/>\n                  </label>\n                  <input className=\"form-control\" defaultValue={q} onKeyUp={handleInput} autoComplete=\"off\" name=\"searchCountry\" placeholder=\"Search by (name, language, capital, calling code)\"/>\n              </div>\n              <div className=\"form-group-select\">\n                  \n                  <select defaultValue={valueSelect}  onChange={handleChange} className=\"form-select\" name=\"regions\">\n                      {\n                          options.map(({value, name})=> <option className={`${ bgDark? 'dark-nav': 'light-nav'}`} key={value} value={value}>{name}</option>)\n                      }\n                  </select>\n\n                  <label htmlFor=\"regions\" >\n                          <FontAwesomeIcon icon={ faSortDown }/>\n                  </label>\n              </div>\n              \n              \n          <div>\n              \n          </div>\n          </div>\n          \n      </div>\n\n  )\n})\n","import { faEye } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nconst CountryCard =React.memo( ({\n     name,\n     region,\n     capital,\n     flag,\n     currencies,\n     languages,\n     callingCodes\n }) => {\n    return (\n        <div className=\"card-index\">\n           <div className=\"card-head\">\n                <img loading=\"lazy\"  src={flag} alt={name}/>\n           </div>\n           <div className=\"card-body\">\n               <h1 className=\"card-title\">{name}</h1>\n               <hr/>\n               <div className=\"card-gruop-text\">\n                   <p><b>Currencies : </b>{currencies[0].code}</p>\n                   <p><b>Region : </b>{region}</p>\n                    {(capital.length >= 2) && <p><b>Capital : </b>{capital}</p>}\n                    {(callingCodes[0].length >= 1) &&<p><b>Calling code : </b>{callingCodes[0]}</p>}\n                   <p><b>Language : </b>{languages.map(({nativeName})=> ` ${nativeName}`)}</p>\n               </div>\n               <Link className=\"goCountry\" to={`/${name}`}>  <FontAwesomeIcon icon={faEye}/> Ver más...  </Link>\n           </div>\n        </div>\n    )\n})\n\nexport default CountryCard\n","\nimport React, { useEffect, useState } from 'react';\nimport { useFetch } from '../../hooks/useFetch';\nimport Loading from '../loading/Loading';\nimport { Navbar } from '../ui/Navbar';\nimport CountryCard from './CountryCard';\nimport './index.scss';\nconst Countries = React.memo(() => {\n    \n   \n    const [region, setRegion ] = useState('');\n    const [getSearch, setSearch] = useState('');\n    useEffect(()=>{\n        const value = localStorage.getItem('region') || '';\n        setRegion( value );\n        const valueSearch = localStorage.getItem('search') || '';\n        setSearch( valueSearch );\n    }, [])\n    const {data, loading, error} =  useFetch(region, getSearch);\n    return (\n        <>\n            <Navbar setRegion={setRegion} setSearch={setSearch}/>\n            <div className=\"card-container\">\n                {\n                    !!error&& (<div className=\"error\">\n                                                <h1>{error}</h1>\n                                            </div>)\n                }\n                { \n                (loading || data.length === 0 )?\n                   <Loading/>\n                :\n                    data.map(country=>  <CountryCard key={country.name} {...country}/>)\n                }\n               \n            </div>\n        </>\n    )\n}\n)\nexport default Countries;\n","import { useEffect, useRef, useState } from \"react\";\nimport { URLS } from \"../config/URLS\";\nimport { getCountriesBysearch } from \"../selectors/getCountriesByName\";\nimport { getCountryByRegion } from \"../selectors/getCountriesByRegion\";\n\n\nexport const useFetch = (region = '', search = '') => {\n\n    const isMounted = useRef(true);\n    const [state, setstate] = useState({\n        data:null, loading:true, error:null\n    });\n\n    \n    useEffect(()=>{\n       return ()=>{\n           isMounted.current = false;\n       }\n    }, [])\n\n    useEffect(()=>{\n\n        setstate({\n            data:null, loading:true, error:null\n        });\n\n        fetch(`${URLS.rest}/all`)\n            .then(res => res.json())\n            .then(data => \n                {\n                    if(isMounted.current){\n                        (search.length < 2 )?\n                         data =  getCountryByRegion(data, region)\n                         :\n                         data = getCountriesBysearch(data, search);\n                        setstate(\n                            {\n                                loading:false,\n                                error:null,\n                                data\n                            }\n                        )}\n                }\n            ).catch(error => setstate(\n                {\n                    loading:true,\n                    error:error.message,\n                    data:null\n                }\n            ))\n    }, [region, search])\n    return state;\n}","import { URLS } from \"../config/URLS\";\n\n\nexport const getCountryById = async(id, setCountry)=>{\n\n        try {\n          const api = await fetch(`${URLS.rest}/name/${id.toLowerCase()}`);\n           const countryInfo = await api.json();\n           const info = !!countryInfo ? countryInfo[0] :  new Error('no encojntrado');\n            setCountry({loading: false, data:info, error:null})\n        } catch (error) {\n            console.log(error);\n        }\n        \n}","import React from 'react'\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker} from 'react-google-maps';\n\n\nconst MapComponent =React.memo( ({lat, lng})=>{\n    return (\n    <GoogleMap\n        defaultZoom={5}\n        defaultCenter={{lat, lng}}\n    >\n        {\n            <Marker position={{lat, lng}}/>\n        }   \n\n    </GoogleMap>)\n})\n\nexport default withScriptjs(\n    withGoogleMap(\n        MapComponent\n    )\n);","import { faLongArrowAltLeft, faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useContext, useEffect, useState } from 'react';\nimport {  useParams } from 'react-router-dom';\nimport { getCountryById } from '../../selectors/getCountryById';\nimport Map from './Maps';\nimport { URLS } from '../../config/URLS';\nimport './index.scss';\nimport Loading from '../loading/Loading';\nimport { BgContext } from '../../hooks/useContext';\n\n\n\n\nconst Country = React.memo(({history}) => {\n\n    const { name:id } = useParams()\n    const backHome = () =>{\n        const lastpath = localStorage.getItem('lastPath') || '/'\n        history.replace(lastpath)\n    }\n    const handleClick = ()=>{\n        backHome();\n    }\n\n\n    const [{data, loading, error}, setcountry] = useState({loading:true, data:null, error:null})\n    useEffect(()=>{\n        getCountryById(id, setcountry)\n    }, [])\n   \n \n    \n\n    const [showModal, setShowModal ] = useState(false);\n\n    const handleCapture = e =>{\n        if(e.target.className ==='modal' || e.target.className === 'close'){\n            setShowModal(m => m = false)\n        } \n    }\n    return (\n        <>\n            <button \n                onClick={handleClick}\n                className=\"button-back\">\n            <FontAwesomeIcon icon={faLongArrowAltLeft}/>  Go back\n            </button>\n            <div className=\"card\">\n            {\n                    !!error&& (<div className=\"error\">\n                                                <h1>{error}</h1>\n                                            </div>)\n            }\n            {\n                loading ?       \n                <Loading/>\n                : \n                (data !== undefined )&&  <Card {...data}  setShowModal= {setShowModal}/>\n               \n                \n            }\n             </div>\n             <div onClickCapture={handleCapture} style={showModal ? {display:'block'} : {display:'none'}} className=\"modal\">\n\n                {/* <!-- Modal content --> */}\n               { \n               \n               loading ?       \n               <FontAwesomeIcon className=\"faSpinner\" icon={faSpinner} spin/>\n               : \n               <div className=\"modal-content\">\n\n                    <span  className=\"close\">&times;</span>\n                    <p> { (data !== undefined )&& data.name}</p>\n                    <div className=\"content-map\">\n                      <Map \n                            googleMapURL={URLS.urlMap}\n                            containerElement={<div style={{ height: '200px' }}></div>}\n                            mapElement={<div style={{ height: '100%' }}></div>}\n                            loadingElement={<div>cargando</div>}\n                            lat={(data !== undefined )&& data.latlng[0]}\n                            lng={(data !== undefined )&& data.latlng[1]}\n                        />\n                    </div>\n                </div>}\n\n                </div>\n        </>\n    )\n}\n)\nexport default Country\n\n\n\n\nconst Card = React.memo(({ name,capital, region, population, languages, alpha3Code, borders, flag, subregion, setShowModal})=>{\n    \n\n\n    const handleModal = () => {\n        setShowModal(m => m = !m);\n    }\n\n    const {bgDark} = useContext(BgContext);\n    return (\n\n        <>\n                <img src={flag} alt=\"mapa\"/>\n\n            <div className=\"card-body\">\n                <h1>{name}</h1>\n                <div className=\"card-text\">\n                    <p><b>Region : </b> {region}</p>\n                    <p><b>SubRegion : </b> {subregion}</p>\n                    <p><b>Capital : </b> {capital}</p>\n                    <p><b>Population : </b> {population}</p>\n                    <p><b>Language : </b> {languages.map(({nativeName})=> ` ${nativeName}` )}</p>\n                    <p><b>Alpha3Code : </b> {alpha3Code}</p>\n                    <p><b>Borders : </b>\n                    {\n                        (borders.length !== 0 ) && <div className=\"borders-group\"> \n                            {\n                                borders.map(borde=> <div key={borde} className=\"borders\"> {borde} </div> )\n                            }\n                        </div>\n                    }\n                    \n                    \n                    </p>\n                    \n                </div>\n              \n                <button onClick={handleModal} className={`btnMap ${bgDark ? 'border-gray-400 rounded-lg border-2 hover:border-gray-100 text-gray-400 hover:text-gray-100 a' : 'border-gray-400 rounded-lg border-2 hover:border-gray-800 text-gray-400 hover:text-gray-800 b'}`}>View Map</button>\n            </div>\n            \n           \n\n\n           \n        </>\n    )\n})","import React, { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport Countries from '../components/countries';\nimport Country from '../components/country/Country';\nimport '../index.scss'\nimport Nav from '../components/ui/Navbar';\nimport { BgContext } from '../hooks/useContext';\nconst CountriesRoutes = () => {\n    const [darkMode, setDarkMode] = useState(false);\n   \n\n    useEffect(() => {\n       if(localStorage.getItem('dark-mode')){\n           document.body.classList.add('dark-mode');\n           setDarkMode(c => c = !c)\n        }\n    }, [])\n    const changeEffect  = ()=>{\n      if(darkMode){\n        localStorage.setItem('dark-mode', 'darkmode')\n        document.body.classList.add('dark-mode');\n      }else{\n        document.body.classList.remove('dark-mode');\n        localStorage.removeItem('dark-mode')\n      }\n    }\n\n    useEffect(() => {\n      changeEffect();\n      \n    }, [darkMode])\n    \n    return (\n        <div className=\"is-light-theme\">\n          <BgContext.Provider value={\n              {\n                bgDark:darkMode\n              }\n            }>\n              <Router>\n\n                <Nav setDarkMode={setDarkMode} darkMode={darkMode} />\n                <div className=\"container\">\n                    <Switch>\n                        <Route exact path=\"/\" component={Countries}/>\n                        <Route exact path=\"/:name\" component={Country}/>\n                        <Redirect to=\"/\"/>\n                    </Switch>\n                </div>\n            \n            </Router> \n          </BgContext.Provider>\n        </div>\n    )\n}\n\nexport default CountriesRoutes;\n","import React from 'react';\nimport CountriesRoutes from './routes/Countries.Routes';\nconst CountriesApp = () => {\n\n \n\n    return (\n        <>\n         \n          <CountriesRoutes/>\n        </>\n    )\n}\n\nexport default CountriesApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CountriesApp from './Countries-App';\nReactDOM.render(\n  <CountriesApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}